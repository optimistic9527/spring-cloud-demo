server:
  port: 9001
spring:
  application:
    name: order
  datasource:
     driver-class-name: com.mysql.jdbc.Driver
     username: root
     password: gxy123456.
     url: jdbc:mysql://127.0.0.1:3306/order?characterEncoding=utf-8&useSSL=false
     druid:
        # 配置初始化大小、最小、最大
        initial-size: 1
        max-active: 20
        min-idle: 3
        # 配置获取连接等待超时的时间
        max-wait: 6000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 30000
        validation-query: select 'x'
        test-on-borrow: false
        test-while-idle: true
        test-on-return: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        stat-view-servlet:
          login-username: admin
          login-password: 123456
          url-pattern: /druid/*
          reset-enable: false
           #allow: IP白名单 (没有配置或者为空，则允许所有访问)
           #deny: IP黑名单 (存在共同时，deny优先于allow)
        web-stat-filter:
          url-pattern: /*
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
logging:
  level:
    #开启debug调试sql
    com.gxy.order.mapper: DEBUG
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka/
  instance:
      ip-address: 127.0.0.1
      prefer-ip-address: true
      instance-id: ${spring.application.name}:${eureka.instance.ip-address}:${server.port}